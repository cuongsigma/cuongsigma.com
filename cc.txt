getgenv().SilentAim = true
getgenv().FOV = 90
getgenv().ShowFakeCircle = true
getgenv().HitChance = 100
getgenv().TargetPart = "Head"
local function ClosestPlayerToCursor()
    local closestPlayer = nil
    local shortestDistance = getgenv().FOV
    
    for _, player in pairs(game:GetService("Players"):GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild(getgenv().TargetPart) then
            local part = player.Character[getgenv().TargetPart]
            local screenPoint, onScreen = Camera:WorldToViewportPoint(part.Position)
            local distance = (Vector2.new(screenPoint.X, screenPoint.Y) - Vector2.new(mouse.X, mouse.Y)).Magnitude

            if onScreen and distance < shortestDistance then
                shortestDistance = distance
                closestPlayer = player
            end
        end
    end

    return closestPlayer
end
 local mt = getrawmetatable(game)
local oldNamecall = mt.__namecall
setreadonly(mt, false)

mt.__namecall = newcclosure(function(self, ...)
    local args = {...}
    local method = getnamecallmethod()

    if SilentAim and method == "FireServer" and tostring(self) == "UpdateMousePos" then
        local target = ClosestPlayerToCursor()
        if target and math.random(1,100) <= getgenv().HitChance then
            local part = target.Character:FindFirstChild(getgenv().TargetPart)
            if part then
                args[1] = part.Position + Vector3.new(
                    math.random(-1,1), 
                    math.random(-1,1), 
                    math.random(-1,1)
                ) --
                return oldNamecall(self, unpack(args))
            end
        end
    end

    return oldNamecall(self, ...)
end)

setreadonly(mt, true)
